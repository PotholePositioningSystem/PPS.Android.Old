apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "pps.android"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def getApiKey() {
    Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY']
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlinVersion"

    // android support libraries
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"

    implementation "com.google.android.gms:play-services-maps:$rootProject.playServicesVersion"
    implementation "com.google.android.gms:play-services-places:$rootProject.playServicesVersion"
    implementation "com.google.android.gms:play-services-games:$rootProject.playServicesVersion"
    implementation "com.google.android.gms:play-services-location:$rootProject.playServicesVersion"
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'net.sharewire:google-maps-clustering:0.1.3'

    implementation 'com.android.support:multidex:1.0.1'

    implementation 'com.github.arimorty:floatingsearchview:2.1.1'
    implementation 'com.karumi:dexter:4.2.0'

    // image
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation "com.mikepenz:iconics-core:3.0.4@aar"
    implementation 'com.mikepenz:community-material-typeface:2.0.46.1@aar'

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rootProject.rxRelayVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // FirebaseUI for Cloud Firestore
    implementation "com.firebaseui:firebase-ui-firestore:$rootProject.firebaseUIVersion"

    // FirebaseUI for Firebase Auth
    implementation "com.firebaseui:firebase-ui-auth:$rootProject.firebaseUIVersion"

    // FirebaseUI for Cloud Storage
    implementation 'com.firebaseui:firebase-ui-storage:3.3.1'

    //auth
    implementation 'com.facebook.android:facebook-login:4.32.0'
    implementation("com.twitter.sdk.android:twitter-core:3.1.1@aar") { transitive = true }


    // dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // Android Kotlin Extension
    implementation "androidx.core:core-ktx:$rootProject.androidKTXVersion"
    implementation 'com.github.anastr:speedviewlib:1.2.0'
}
apply plugin: 'com.google.gms.google-services'
